module.exports = {
  '8xf0y6ziyjabvozdd253nd': {
    id: '8xf0y6ziyjabvozdd253nd',
    timestamp: 1467166872634,
    title: 'Build a state management system with vanilla JavaScript',
    body: `Managing state is not a new thing in software, but it’s still relatively new for building software in JavaScript. Traditionally, we’d keep state within the DOM itself or even assign it to a global object in the window. Now though, we’re spoiled with choices for libraries and frameworks to help us with this. Libraries like Redux, MobX and Vuex make managing cross-component state almost trivial. This is great for an application’s resilience and it works really well with a state-first, reactive framework such as React or Vue.`,
    author: 'Andy Bell',
    category: 'javascript',
    voteScore: 6,
    deleted: false,
    commentCount: 3,
  },
  '6ni6ok3ym7mf1p33lnez': {
    id: '6ni6ok3ym7mf1p33lnez',
    timestamp: 1468479767190,
    title: 'Learn Redux in 10 minutes!',
    body:
      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
    author: 'thingone',
    category: 'javascript',
    voteScore: 15,
    deleted: false,
    commentCount: 1,
  },
  '6ni6ok3ym7mf1p33l123': {
    id: '6ni6ok3ym7mf1p33l123',
    timestamp: 1468479767190,
    title:
      'Anatomy of a malicious script: how a website can take over your browser',
    body:
      'By now, we all know that the major tech behemoths like Facebook or Google know everything about our lives, including how often we go to the bathroom (hence all the prostate medication ads that keep popping up, even on reputable news sites). After all, we’ve given them permission to do so, by reading pages and pages of legalese in their T&C pages (we all did, didn’t we?) and clicking on the "Accept" button.',
    author: 'Paolo Mioni',
    category: 'javascript',
    voteScore: 10,
    deleted: false,
    commentCount: 0,
  },
  '6ni6ok3ym7mf1p33l456': {
    id: '6ni6ok3ym7mf1p33l456',
    timestamp: 1468479767190,
    title: 'Turn Sublime Text 3 into a JavaScript IDE',
    body:
      'Sublime Text is one of the most popular editors for web development and software development in general. Its very smooth and fast compared to other editors (being written in C++ helps that speed). Sublime also has tons of plugins you can find through Package Control. But it’s only a text editor and not an IDE. An IDE is a software application that provides comprehensive facilities to computer programmers for software development. In fact, Sublime doesn’t offer features like debugging tools, built-in tools for compiling and running applications, intelligent code suggestions, or code refactoring. Instead it offers a set of APIs you can use to extend it. Here’s an introduction to the JavaScript Enhancement plugin (my own creation) that makes Sublime a bit more IDE-like for JavaScript development.',
    author: 'Lorenzo Pichilli',
    category: 'javascript',
    voteScore: -1,
    deleted: false,
    commentCount: 0,
  },
  '6ni6ok3ym7mf1p33l789': {
    id: '6ni6ok3ym7mf1p33l789',
    timestamp: 1468479767190,
    title: 'Simple Swipe With Vanilla JavaScript',
    body:
      "I used to think implementing swipe gestures had to be very difficult, but I have recently found myself in a situation where I had to do it and discovered the reality is nowhere near as gloomy as I had imagined. This article is going to take you, step by step, through the implementation with the least amount of code I could come up with. So, let's jump right into it!",
    author: 'Ana Tutor',
    category: 'javascript',
    voteScore: 0,
    deleted: false,
    commentCount: 0,
  },
  '6ni6ok3ym7mf1p33l184': {
    id: '6ni6ok3ym7mf1p33l184',
    timestamp: 1468479767190,
    title: 'Finite State Machines with React',
    body:
      'As JavaScript applications on the web have grown more complex, so too has the complexity of dealing with state in those applications — state being the aggregate of all the data that an application needs to perform its function. Over the last several years, there has been a ton of great innovation in the realm of state management through tools like Redux, MobX, and Vuex. Something that hasn’t gotten quite as much attention, though, is state design.',
    author: 'Jon Bellah',
    category: 'react',
    voteScore: 23,
    deleted: false,
    commentCount: 0,
  },
  '6ni6ok1237mf1p33lnez': {
    id: '6ni6ok1237mf1p33lnez',
    timestamp: 1468479767190,
    title: 'Render Children in React Using Fragment or Array Components',
    body:
      "What comes to your mind when React 16 comes up? Context? Error Boundary? Those are on point. React 16 came with those goodies and much more, but In this post, we'll be looking at the rendering power it also introduced — namely, the ability to render children using Fragments and Array Components. These are new and really exciting concepts that came out of the React 16 release, so let’s look at them closer and get to know them.",
    author: 'Kingsley',
    category: 'react',
    voteScore: 54,
    deleted: false,
    commentCount: 0,
  },
  '6ni6ok3ym7mf4323lnez': {
    id: '6ni6ok3ym7mf4323lnez',
    timestamp: 1468479767190,
    title: 'Building a Complex UI Animation in React, Simply',
    body:
      "Let’s use React, styled-components, and react-flip-toolkit to make our own version of the animated navigation menu on the Stripe homepage. It's an impressive menu with some slick animation effects and the combination of these three tools can make it relatively easy to recreate. This is an intermediate-level walkthrough that assumes familiarity with React and basic animation concepts. Our React guide is a good place to start.",
    author: 'Alex Holachek',
    category: 'react',
    voteScore: 100,
    deleted: false,
    commentCount: 0,
  },
  '6ni1113ym7mf1p33lnez': {
    id: '6ni1113ym7mf1p33lnez',
    timestamp: 1468479767190,
    title: 'Handling Errors with Error Boundary',
    body:
      'Thinking and building in React involves approaching application design in chunks, or components. Each part of your application that performs an action can and should be treated as a component. In fact, React is component-based and, as Tomas Eglinkas recently wrote, we should leverage that concept and err on the side of splitting any large chunking into smaller components. Splitting inevitably introduces component hierarchies, which are good because they bloated components and architecture. However, things can begin to get complicated when an error occurs in a child component. What happens when the whole application crashes?! Seriously, React, why do the parent and sibling components have to pay for the sins of another component? Why?',
    author: 'Kingsley Silas',
    category: 'react',
    voteScore: 43,
    deleted: false,
    commentCount: 0,
  },
  '6ni6411ym7mf1p33lnez': {
    id: '6ni6411ym7mf1p33lnez',
    timestamp: 1468479767190,
    title: 'Automate Your Workflow with Node',
    body:
      'You know those tedious tasks you have to do at work: Updating configuration files, copying and pasting files, updating Jira tickets. Time adds up after a while. This was very much the case when I worked for an online games company back in 2016. The job could be very rewarding at times when I had to build configurable templates for games, but about 70% of my time was spent on making copies of those templates and deploying re-skinned implementations.',
    author: 'Shaun Store',
    category: 'node',
    voteScore: 1,
    deleted: false,
    commentCount: 0,
  },
  cccok3ym7mf1p33lnez: {
    id: 'cccok3ym7mf1p33lnez',
    timestamp: 1468479767190,
    title: 'Creating a Static API from a Repository',
    body:
      "When I first started building websites, the proposition was quite basic: take content, which may or may not be stored in some form of database, and deliver it to people's browsers as HTML pages. Over the years, countless products used that simple model to offer all-in-one solutions for content management and delivery on the web. Fast-forward a decade or so and developers are presented with a very different reality. With such a vast landscape of devices consuming digital content, it's now imperative to consider how content can be delivered not only to web browsers, but also to native mobile applications, IoT devices, and other mediums yet to come.",
    author: 'Eduardo Boucas',
    category: 'node',
    voteScore: 5,
    deleted: false,
    commentCount: 0,
  },
  '6feaok3ym7mf1p33lnez': {
    id: '6feaok3ym7mf1p33lnez',
    timestamp: 1468479767190,
    title: 'The peculiar magic of flexbox and auto margins',
    body:
      'In front-end development, there are often times when I know that I don’t know something. I might know enough to know what CSS to search for, but I have absolutely no idea how to use it or what the right syntax is. Somehow, in my head, there appears to be a filing cabinet that’s entirely empty, and when I try to look something up, all I find is an almost illegible sticky note instead. One topic like this (which is an area I’ve sort of always known about but never really understood) is how auto margins and flexbox interact with one another.',
    author: 'Robin Rendle',
    category: 'css',
    voteScore: 32,
    deleted: false,
    commentCount: 0,
  },
  '6ni6ok3y17mfcp33anez': {
    id: '6ni6ok3y17mfcp33anez',
    timestamp: 1468479767190,
    title:
      'Solved with CSS! Logical Styling Based on the Number of Given Elements',
    body:
      'Did you know that CSS is Turing complete? Did you know that you can use it to do some pretty serious logical styling? Well you can! You don’t have to set all of your logic-based styling rules in JavaScript, or even have to use JavaScript to set classes you are styling against. In many cases, CSS can handle that itself. I’m still discovering new CSS tricks everyday, and it just makes me love it even more.',
    author: 'Una Kravets',
    category: 'css',
    voteScore: 40,
    deleted: false,
    commentCount: 0,
  },
  '6ni6ck3y1cmccp3canez': {
    id: '6ni6ck3y1cmccp3canez',
    timestamp: 1468479767190,
    title: 'Autenticação em APIs ASP.Net Core com JWT — Refresh Token',
    body:
      'Quando trabalhamos com autenticação baseada em tokens JWT temos que considerar que ele tem um tempo de expiração que irá invalidá-lo em determinado momento. Em alguns cenários pode ser interessante obter um novo token de acesso sem precisar forçar o usuário a fazer um novo login informando seu usuário e senha. Isso é muito comum quando trabalhamos com aplicativos mobile. Para esse artigo usei o mesmo exemplo de código de um artigo > anterior onde mostro como implementar uma API de Autenticação simples com JWT. Você pode conferir em meu Github.',
    author: 'Wellington Nascimento',
    category: 'javascript',
    voteScore: 40,
    deleted: false,
    commentCount: 0,
  },
  '6niasd3y1cmccddcanez': {
    id: '6niasd3y1cmccddcanez',
    timestamp: 1468479767190,
    title: 'This is Mark Down',
    body:
      "Changes are automatically rendered as you type.\n\n* Implements [GitHub Flavored Markdown](https://github.github.com/gfm/)\n* Renders actual, \"native\" React DOM elements\n* Allows you to escape or skip HTML (try toggling the checkboxes above)\n* If you escape or skip the HTML, no `dangerouslySetInnerHTML` is used! Yay!\n\n## HTML block below\n\n<blockquote>\n  This blockquote will change based on the HTML settings above.\n</blockquote>\n\n## How about some code?\n```js\nvar React = require('react');\nvar Markdown = require('react-markdown');\n\nReact.render(\n  <Markdown source=\"# Your markdown here\" />,\n  document.getElementById('content')\n);\n```\n\nPretty neat, eh?\n\n## Tables?\n\n| Feature | Support |\n| ------ | ----------- |\n| tables | ✔ |\n| alignment | ✔ |\n| wewt | ✔ |\n\n## More info?\n\nRead usage information and more on [GitHub](//github.com/rexxars/react-markdown)\n\n---------------\n\nA component by [VaffelNinja](http://vaffel.ninja) / Espen Hovlandsdal",
    author: 'Ângelo Lucas',
    category: 'react',
    voteScore: 40,
    deleted: false,
    commentCount: 0,
  },
}
